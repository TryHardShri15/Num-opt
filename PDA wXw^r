#include <iostream>
#include <stack>
#include <string>
using namespace std;

bool pda_wXwr(const string &input) {
    stack<char> st;
    size_t i = 0;
    size_t n = input.length();

    // Push all characters before 'X' onto the stack
    while (i < n && input[i] != 'X') {
        if (input[i] == 'a' || input[i] == 'b') {
            st.push(input[i]);
        } else {
            return false; // Reject if invalid character found
        }
        i++;
    }

    // If 'X' is not found or it's at the first position, reject
    if (i == n || input[i] != 'X') {
        return false;
    }

    i++; // Move past 'X'

    // Pop from the stack for each character after 'X' to match w^r
    while (i < n) {
        if (st.empty()) {
            return false; // Reject if stack is empty before matching all characters
        }

        char top = st.top();
        if (input[i] != top) {
            return false; // Reject if character doesn't match the stack top
        }

        st.pop();
        i++;
    }

    // Accept if stack is empty (all characters matched correctly)
    return st.empty();
}

int main() {
    string input;
    cout << "Enter a string: ";
    cin >> input;

    if (pda_wXwr(input)) {
        cout << "Accepted\n";
    } else {
        cout << "Rejected\n";
    }

    return 0;
}
